<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net6.0-android;net6.0-ios;net6.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net6.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net6.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>dotNetMauiPopupSample</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>dotNetMauiPopupSample</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.dotnetmauipopupsample</ApplicationId>
		<ApplicationIdGuid>9FCC8FE7-404D-47FC-A425-05DBD7DD2DD9</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\appicon.svg" ForegroundFile="Resources\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\appiconfg.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Condition=" '$(EnableDefaultXamlItems)' == 'true' " Update="MainPage %28copy%29.xaml">
	    <SubType>Designer</SubType>
	  </MauiXaml>
	  <MauiXaml Condition=" '$(EnableDefaultXamlItems)' == 'true' " Update="MyPopUpView.xaml">
	    <SubType>Designer</SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\SimplePopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Condition=" '$(EnableDefaultXamlItems)' == 'true' " Update="Views\MainPage.xaml">
	    <SubType>Designer</SubType>
	  </MauiXaml>
	  <MauiXaml Condition=" '$(EnableDefaultXamlItems)' == 'true' " Update="Views\WelcomPage.xaml">
	    <SubType>Designer</SubType>
	  </MauiXaml>
	  <MauiXaml Condition=" '$(EnableDefaultXamlItems)' == 'true' " Update="Views\WelcomePage.xaml">
	    <SubType>Designer</SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\ButtonPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\MultipleButtonPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\NoOutsideTapDismissPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\OpenedEventSimplePopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\ReturnResultPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\ButtonPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\MultipleButtonPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\NoOutsideTapDismissPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\OpenedEventSimplePopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\ReturnResultPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\ToggleSizePopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	  <MauiXaml Update="Views\Popups\TransparentPopup.xaml">
	    <SubType></SubType>
	  </MauiXaml>
	</ItemGroup>
	<ItemGroup>
	  <None Remove="Views\" />
	  <None Remove="Views\Popups\" />
	  <None Remove="CommunityToolkit.Maui" />
	  <None Remove="CommunityToolkit.Mvvm" />
	  <None Remove="ViewModels\" />
	  <None Remove="CommonUtility\" />
	  <None Remove="CommonUtility\Base\" />
	  <None Remove="CommunityToolkit.Maui.Markup" />
	</ItemGroup>
	<ItemGroup>
	  <Folder Include="Views\" />
	  <Folder Include="Views\Popups\" />
	  <Folder Include="ViewModels\" />
	  <Folder Include="CommonUtility\" />
	  <Folder Include="CommonUtility\Base\" />
	</ItemGroup>
	<ItemGroup>
	  <Compile Condition=" '$(EnableDefaultCompileItems)' == 'true' " Update="MyPopUpView.xaml.cs">
	    <DependentUpon>MyPopUpView.xaml</DependentUpon>
	  </Compile>
	  <Compile Condition=" '$(EnableDefaultCompileItems)' == 'true' " Update=".xaml.cs">
	    <DependentUpon>MyPopUpView.xaml</DependentUpon>
	  </Compile>
	  <Compile Condition=" '$(EnableDefaultCompileItems)' == 'true' " Update="Views\MainPage.xaml.cs">
	    <DependentUpon>MultiplePopupPage.xaml</DependentUpon>
	    <SubType>Code</SubType>
	  </Compile>
	</ItemGroup>
	<ItemGroup>
	  <PackageReference Include="CommunityToolkit.Maui" Version="1.0.0-rc3" />
	  <PackageReference Include="CommunityToolkit.Mvvm" Version="8.0.0-preview3" />
	  <PackageReference Include="CommunityToolkit.Maui.Markup" Version="1.0.0-rc3" />
	</ItemGroup>
</Project>
